RUST_LOG=carrot=info,actix=info

# API Config
CARROT_HOST=127.0.0.1
CARROT_PORT=8080

# DB Config
CARROT_DB_THREADS=4
CARROT_DATABASE_URL=postgres://test_framework_admin:admin@localhost:5432/test_framework_db_dev

# Cromwell Config
CARROT_CROMWELL_ADDRESS=localhost:8000

# Optional time, in seconds, to wait between updating statuses of running tests
# Defaults to 5 minutes if not specified
CARROT_STATUS_CHECK_WAIT_TIME_IN_SECS=300
# Optional number of consecutive failures to allow when checking run/build statuses before terminating, defaults to 5
CARROT_ALLOWED_CONSECUTIVE_STATUS_CHECK_FAILURES=5

# Email config
# CARROT_EMAIL_MODE can be three options:
# - SERVER, if you want to connect to a mail server;
# - SENDMAIL, if you want to use the Unix sendmail utility
# - NONE, which will disable email sending
CARROT_EMAIL_MODE=SERVER
# Needed for both SERVER mode and SENDMAIL mode
CARROT_EMAIL_FROM=carrot@example.com
# Only needed for SERVER mode
CARROT_EMAIL_DOMAIN=smtp.example.com
# Optional for if you need credentials for email
# CARROT_EMAIL_USERNAME=carrot@example.com
# CARROT_EMAIL_PASSWORD=password

# For enabling creating mappings to git repos and generating custom docker images from commits of
# those git repos
CARROT_ENABLE_CUSTOM_IMAGE_BUILDS=false
# Host address for the registry where we will put docker images
# CARROT_IMAGE_REGISTRY_HOST=

# For enabling using WDLs that are accessed via a gs uri
CARROT_ENABLE_GS_URIS_FOR_WDL=false

# For using gcloud services as a service account (required if CARROT_ENABLE_GS_URIS_FOR_WDL,
# CARROT_ENABLE_GITHUB_REQUESTS, or CARROT_ENABLE_REPORTING is true)
CARROT_GCLOUD_SA_KEY_FILE=/path/to/key/file.json

# Where to store WDLs locally (defaults to /carrot/wdl)
# CARROT_WDL_DIRECTORY=

# For enabling subscribing to a Google Cloud Pub/Sub topic, which is necessary for processing
# test run requests from GitHub
#CARROT_ENABLE_GITHUB_REQUESTS=true
#CARROT_PUBSUB_SUBSCRIPTION_NAME=projects/{project_name}/subscriptions/{subscription_name}
# Max messages to retrieve at once from pubsub (defaults to 20)
#CARROT_PUBSUB_MAX_MESSAGES_PER=20
# How long to wait between retrieving messages from pubsub (defaults to 60 seconds)
#CARROT_PUBSUB_WAIT_TIME_IN_SECS=60

# For posting comments to GitHub, if GitHub requests are enabled
#CARROT_GITHUB_CLIENT_ID=
#CARROT_GITHUB_CLIENT_TOKEN=

# For enabling cloning from private repositories when generating docker images for running tests
# Will also allow requests from private github repos if CARROT_ENABLE_GITHUB_REQUESTS is also true
CARROT_ENABLE_PRIVATE_GITHUB_ACCESS=false
# Account to use for cloning from private github repos
#CARROT_PRIVATE_GITHUB_CLIENT_ID=
# Pass key for the account specified by PRIVATE_GITHUB_CLIENT_ID
CARROT_PRIVATE_GITHUB_CLIENT_TOKEN=
# GCS url of a google kms encrypted file containing the password for the account specified by
# CARROT_PRIVATE_GITHUB_CLIENT_ID
#CARROT_PRIVATE_GITHUB_CLIENT_PASS_URI=
# GCloud KMS keyring and key for decrypting CARROT_PRIVATE_GITHUB_CLIENT_PASS_URI (must be created
# on the project being used by the primary cromwell server being used by CARROT)
#CARROT_PRIVATE_GITHUB_KMS_KEYRING=
#CARROT_PRIVATE_GITHUB_KMS_KEY=

# Location of the womtool jar to use for WDL validation
CARROT_WOMTOOL_LOCATION=

# For enabling reporting functionality, which allows generating jupyter notebook reports from runs
CARROT_ENABLE_REPORTING=false
# GCS directory where we'll put generated report files (in the form gs://bucket-name/my/report/directory)
#CARROT_REPORT_LOCATION=
# Docker repo location of the docker image that will be used for creating reports
#CARROT_REPORT_DOCKER_LOCATION=
